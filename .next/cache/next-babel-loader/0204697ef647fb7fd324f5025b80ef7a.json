{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nvar __jsx = React.createElement;\nimport React, { useContext, useState, useEffect } from \"react\";\nimport Layout from \"../../layouts\";\nimport Header from \"../../components/Header\";\nimport ClearFix from \"../../components/ClearFix\";\nimport Cta from \"../../components/Cta\";\nimport { Context } from \"../../context\";\nimport projects from \"../../assets/projects\";\nimport { useRouter } from \"next/router\";\nimport { Title, Container, Image, Row } from \"./styles\";\nexport default function ProjectPage({\n  id\n}) {\n  const context = useContext(Context);\n  const router = useRouter();\n  const projectNumber = _parseInt(router.query.id) - 1;\n  const project = projects[projectNumber];\n  const img = project.img;\n  useEffect(() => {\n    document.title = context.translation.projects[projectNumber].title + \" | FÃ¡bio de Abreu\";\n  }, [context.translation, projectNumber]);\n  const {\n    0: imgState,\n    1: setImgState\n  } = useState({\n    width: \"0rem\",\n    height: \"0rem\",\n    minHeight: \"0\",\n    minWidth: \"0\"\n  });\n\n  function handleImageLoad({\n    target\n  }) {\n    const aspectRatio = target.naturalWidth / target.naturalHeight;\n    const width = aspectRatio * 25;\n    const height = 1 / aspectRatio * 25;\n    setImgState({\n      width: `${width}vmax`,\n      height: `${height}vmax`,\n      minWidth: `${width}rem`,\n      minHeight: `${height}rem`\n    });\n  }\n\n  return __jsx(Layout, null, __jsx(Container, null, __jsx(Header, null), __jsx(Row, null, __jsx(Title, null, context.translation.projects[projectNumber].title), __jsx(\"div\", null, project.ctas.map((cta, index) => __jsx(Cta, {\n    key: index,\n    link: cta.link\n  }, cta.text)))), __jsx(ClearFix, null, __jsx(Image, {\n    width: imgState.width,\n    height: imgState.height,\n    minHeight: imgState.minHeight,\n    minWidth: imgState.minWidth,\n    onLoad: handleImageLoad,\n    src: img\n  }), context.translation.projects[projectNumber].desc.map((text, i) => __jsx(\"p\", {\n    key: i\n  }, text)))));\n}\n\nProjectPage.getInitialProps = async () => {\n  return {};\n};","map":null,"metadata":{},"sourceType":"module"}