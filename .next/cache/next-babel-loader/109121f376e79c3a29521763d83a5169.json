{"ast":null,"code":"var _jsxFileName = \"/home/usuario/projetos/portfolio/context.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport pt from \"./assets/translations/pt\";\nimport en from \"./assets/translations/en\";\nexport var Context = React.createContext();\nexport var Provider = function Provider(props) {\n  var _useState = useState(\"en\"),\n      lang = _useState[0],\n      setLang = _useState[1];\n\n  function handleLangChange(lang) {\n    setLang(lang);\n  }\n\n  return __jsx(Context.Provider, {\n    value: {\n      translation: lang === \"pt\" ? pt : en,\n      lang: lang,\n      changeLang: handleLangChange\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, props.children);\n};","map":{"version":3,"sources":["/home/usuario/projetos/portfolio/context.js"],"names":["React","useState","pt","en","Context","createContext","Provider","props","lang","setLang","handleLangChange","translation","changeLang","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,EAAP,MAAe,0BAAf;AACA,OAAOC,EAAP,MAAe,0BAAf;AAEA,OAAO,IAAMC,OAAO,GAAGJ,KAAK,CAACK,aAAN,EAAhB;AAEP,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK,EAAI;AAAA,kBACPN,QAAQ,CAAC,IAAD,CADD;AAAA,MACxBO,IADwB;AAAA,MAClBC,OADkB;;AAG/B,WAASC,gBAAT,CAA0BF,IAA1B,EAAgC;AAC9BC,IAAAA,OAAO,CAACD,IAAD,CAAP;AACD;;AAED,SACE,MAAC,OAAD,CAAS,QAAT;AACE,IAAA,KAAK,EAAE;AACLG,MAAAA,WAAW,EAAEH,IAAI,KAAK,IAAT,GAAgBN,EAAhB,GAAqBC,EAD7B;AAELK,MAAAA,IAAI,EAAJA,IAFK;AAGLI,MAAAA,UAAU,EAAEF;AAHP,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGH,KAAK,CAACM,QAPT,CADF;AAWD,CAlBM","sourcesContent":["import React, { useState } from \"react\";\nimport pt from \"./assets/translations/pt\";\nimport en from \"./assets/translations/en\";\n\nexport const Context = React.createContext();\n\nexport const Provider = props => {\n  const [lang, setLang] = useState(\"en\");\n\n  function handleLangChange(lang) {\n    setLang(lang);\n  }\n\n  return (\n    <Context.Provider\n      value={{\n        translation: lang === \"pt\" ? pt : en,\n        lang,\n        changeLang: handleLangChange\n      }}\n    >\n      {props.children}\n    </Context.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}