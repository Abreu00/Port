{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nvar __jsx = React.createElement;\nimport React, { useContext, useState, useEffect } from \"react\";\nimport Layout from \"../../layouts\";\nimport Header from \"../../components/Header\";\nimport ClearFix from \"../../components/ClearFix\";\nimport Cta from \"../../components/Cta\";\nimport { Context } from \"../../context\";\nimport projects from \"../../assets/projects\";\nimport { useRouter } from \"next/router\";\n/*import { Title, Container, Image, Row } from \"./styles\";*/\n\nimport styled from \"styled-components\";\nimport theme from \"../../Globals/theme\";\nimport mediaQuery from \"../../Globals/mediaQueries\";\nexport const Container = styled.div`\n  padding: 0 calc(${theme.sidebar.width} + 3rem) 0 3rem;\n  font-size: 1.8rem;\n  text-align: justify;\n\n  p:not(:last-child) {\n    margin-bottom: 1em;\n  }\n\n  @media (max-width: ${mediaQuery.width.pc.smaller}) {\n    padding: 0 2rem;\n  }\n`;\nexport const Row = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 3rem;\n\n  @media (max-width: ${mediaQuery.width.pc.smaller}) {\n    flex-direction: column;\n\n    > :last-child {\n      bottom: 15%;\n      transform: translateY(-50%);\n      position: fixed;\n    }\n  }\n`;\nexport const Title = styled.h1`\n  font-size: 5rem;\n  padding-left: 2rem;\n  text-align: left;\n  font-weight: bold;\n  color: ${props => props.theme.font.colorBold};\n\n  @media (max-width: ${mediaQuery.width.pc.smaller}) {\n    & {\n      text-align: center;\n      padding-left: 2rem;\n    }\n  }\n`;\nexport const Image = styled.img`\n  width: ${props => props.width};\n  height: ${props => props.height};\n  min-height: ${props => props.minHeight};\n  min-width: ${props => props.minWidth};\n  float: left;\n  margin: -0.6rem 1.4rem 0.4rem 0rem;\n  transform: scale(0.9);\n  box-shadow: 0 1rem 1.25rem 0 rgba(33, 33, 33, 0.25),\n    0 0 0 -0.4rem ${props => props.theme.font.colorBold};\n  border-radius: 0.5rem;\n  transition: transform 0.5s, box-shadow 0.5s;\n  user-select: none;\n  &:hover {\n    transform: scale(1);\n    box-shadow: 0 1rem 1.25rem 0 rgba(33, 33, 33, 0.25), 0 0 0 1rem transparent;\n  }\n\n  @media (max-width: ${mediaQuery.width.pc.smaller}) {\n    & {\n      height: auto;\n      width: 100vw;\n      max-width: 100vw;\n      margin: 0 calc(-50vw + 50%);\n      margin-bottom: 2rem;\n      transform: scale(1);\n      object-fit: cover;\n      object-position: top;\n      border-radius: 0;\n      float: none;\n      box-shadow: none;\n      box-shadow: 0 0.5rem 1.25rem 0 rgba(33, 33, 33, 0.15);\n    }\n\n    &:hover {\n      transform: scale(1);\n      box-shadow: 0 0.5rem 1.25rem 0 rgba(33, 33, 33, 0.1);\n    }\n  }\n`;\nexport default function ProjectPage({\n  id\n}) {\n  const context = useContext(Context);\n  const router = useRouter();\n  const projectNumber = _parseInt(router.query.id) - 1;\n  const project = projects[projectNumber];\n  const img = project.img;\n  useEffect(() => {\n    document.title = context.translation.projects[projectNumber].title + \" | FÃ¡bio de Abreu\";\n  }, [context.translation, projectNumber]);\n  const {\n    0: imgState,\n    1: setImgState\n  } = useState({\n    width: \"0rem\",\n    height: \"0rem\",\n    minHeight: \"0\",\n    minWidth: \"0\"\n  });\n\n  function handleImageLoad({\n    target\n  }) {\n    const aspectRatio = target.naturalWidth / target.naturalHeight;\n    const width = aspectRatio * 25;\n    const height = 1 / aspectRatio * 25;\n    setImgState({\n      width: `${width}vmax`,\n      height: `${height}vmax`,\n      minWidth: `${width}rem`,\n      minHeight: `${height}rem`\n    });\n  }\n\n  return __jsx(Layout, null, __jsx(Container, null, __jsx(Header, null), __jsx(Row, null, __jsx(Title, null, context.translation.projects[projectNumber].title), __jsx(\"div\", null, project.ctas.map((cta, index) => __jsx(Cta, {\n    key: index,\n    link: cta.link\n  }, cta.text)))), __jsx(ClearFix, null, __jsx(Image, {\n    width: imgState.width,\n    height: imgState.height,\n    minHeight: imgState.minHeight,\n    minWidth: imgState.minWidth,\n    onLoad: handleImageLoad,\n    src: img\n  }), context.translation.projects[projectNumber].desc.map((text, i) => __jsx(\"p\", {\n    key: i\n  }, text)))));\n}\n\nProjectPage.getInitialProps = async () => {\n  return {};\n};","map":null,"metadata":{},"sourceType":"module"}